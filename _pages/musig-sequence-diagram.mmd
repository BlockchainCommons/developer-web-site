## Two Party

```mermaid
sequenceDiagram
    participant Alice
    participant Bob
    participant Verifier

    Note left of Alice: Step 0: INDEPENDENT AUTHENTICATION <br/>AND KEY AGREEMENT
    Alice->>Bob: Establish SESSION & ENCRYPTION (SE)<br/>via independent key agreement (e.g., TOFU)
    Bob->>Alice: Confirm SESSION & ENCRYPTION (SE)

    Note left of Alice: Step 1: SIGNING KEY EXCHANGE<br/>Exchange encrypted public keys
    
    Alice->>Bob: PARTIAL_PUBLIC_KEY_SE(Alice)
    Bob->>Alice: PARTIAL_PUBLIC_KEY_SE(Bob)

    Note over Alice, Bob: Step 1.3: PUBLIC KEY VERIFICATION<br/>Parties verify the public key

    Note over Alice,Bob: Step 1.5: GROUP KEY CREATION<br>Parties create group public key
    Bob->>Verifier: GROUP_PUBLIC_KEY
    
    Note left of Alice: Step 2: NONCE EXCHANGE<br/>Exchange encrypted nonces
    Alice->>Bob: PUBLIC_NONCE_SE(Alice)
    Bob->>Alice: PUBLIC_NONCE_SE(Bob)

    Note over Alice, Bob: Step 2.3: NONCE VERIFICATION<br/>Parties verify the nonces

    Note left of Alice: Step 3: PARTIAL SIGNATURES<br/>Exchange encrypted signatures
    Alice->>Bob: PARTIAL_SIGNATURE_SE(Alice)
    Bob->>Alice: PARTIAL_SIGNATURE_SE(Bob)

    Note over Alice, Bob:  Step 3.3: SIGNATURE VERIFICATION<br/>Parties verify the partial signatures

Note left of Alice: Step 4: FINAL SIGNATURE AGGREGATION<br/>Aggregate the final signature<br>Compute signed message
    Bob->>Verifier: SIGNED_MESSAGE

    Note over Verifier: VERIFY SIGNED MESSAGE

    Note left of Alice: STEP Ω: MUSIG2 COMPLETE<br/>2-of-2 MuSig2 signing  finished
```

## Three Party

```mermaid
sequenceDiagram
    participant Coordinator
    participant Alice
    participant Bob
    participant Carol
    participant Verifier
        Note left of Coordinator: Step 0: INDEPENDENT AUTHENTICATION <br/>AND KEY AGREEMENT

    Note over Alice, Coordinator: Step 0.1: SESSION REQUEST

    Alice->>Coordinator: Request SESSION

    Coordinator->>Alice: Establish SESSION
        
    Note right of Alice: Alice verifies Coordinator

    Note over Alice, Coordinator: Step 0.2: SESSION ESTABLISHMENT

    Alice->>Coordinator: Establish PARTICIPANTS & ENCRYPTION
    Coordinator->>Bob: Establish SESSION & ENCRYPTION (SE)
    Coordinator->>Carol: Establish SESSION & ENCRYPTION (SE)
    
    Note over Bob, Carol: Bob & Carol verify everything

    Note left of Coordinator: Step 1: SIGNING KEY EXCHANGE<br/>Exchange encrypted public keys

    Note over Alice,Coordinator: Step 1.1: PUBLIC KEY COLLECTION

    Alice->>Coordinator: PARTIAL_PUBLIC_KEY_SE(Alice)
    Bob->>Coordinator: PARTIAL_PUBLIC_KEY_SE(Bob)
    Carol->>Coordinator: PARTIAL_PUBLIC_KEY_SE(Carol)

    Note over Alice,Coordinator: Step 1.2: PUBLIC KEY DISTRIBUTION<br>(messages combined for brevity)

    Coordinator->>Alice: PARTIAL_PUBLIC_KEY_SE(Bob,Carol)
    Coordinator->>Bob: PARTIAL_PUBLIC_KEY_SE(Alice,Carol)
    Coordinator->>Carol: PARTIAL_PUBLIC_KEY_SE(Bob,Carol)

    Note over Alice, Coordinator: Step 1.3: PUBLIC KEY VERIFICATION<br/>Parties verify the public key

    Note over Alice,Coordinator: Step 1.5: GROUP KEY CREATION<br>Parties create group public key
    Carol->>Verifier: GROUP_PUBLIC_KEY
    
    Note left of Coordinator: Step 2: NONCE EXCHANGE<br/>Exchange encrypted nonces
    
    Alice->>Coordinator: PUBLIC_NONCE_SE(Alice)
    Bob->>Coordinator: PUBLIC_NONCE_SE(Bob)
    Carol->>Coordinator: PUBLIC_NONCE_SE(Carol)

    Coordinator->>Alice: PUBLIC_NONCE_SE(Bob, Carol)
    Coordinator->>Bob: PUBLIC_NONCE_SE(Alice, Carol)
    Coordinator->>Carol: PUBLIC_NONCE_SE(Alice, Bob)

    Note over Alice, Coordinator: Step 2.3: NONCE VERIFICATION<br/>Parties verify the nonces

    Note left of Coordinator: Step 3: PARTIAL SIGNATURES<br/>Exchange encrypted signatures

    Alice->>Coordinator: PUBLIC_SIGNATURE_SE(Alice)
    Bob->>Coordinator: PUBLIC_SIGNATURE_SE(Bob)
    Carol->>Coordinator: PUBLIC_SIGNATURE_SE(Carol)

    Coordinator->>Alice: PUBLIC_SIGNATURE_SE(Bob, Carol)
    Coordinator->>Bob: PUBLIC_SIGNATURE_SE(Alice, Carol)
    Coordinator->>Carol: PUBLIC_SIGNATURE_SE(Alice, Bob)


    Note over Alice, Coordinator:  Step 3.3: SIGNATURE VERIFICATION<br/>Parties verify the partial signatures

    Note left of Coordinator: Step 4: FINAL SIGNATURE AGGREGATION<br/>Aggregate the final signature<br>Compute signed message
    Carol->>Verifier: SIGNED_MESSAGE

    Note over Verifier: VERIFY SIGNED MESSAGE

    Note left of Coordinator: STEP Ω: MUSIG2 COMPLETE<br/>3-of-3 MuSig2 signing  finished

```
